Setup:

1. Run source setup.sh (or .\setup.ps1 in PowerShell)

The task

You live in your own repository. There is a file called file.txt.

1. What's the content of file.txt?
# cat file.txt
# 1
2. Overwrite the content in file.txt: echo 2 > file.txt to change the state of your file in the working directory (or sc file.txt '2' in PowerShell)
3. What does git diff tell you?
# diff --git a/file.txt b/file.txt
# index d00491f..0cfbf08 100644
# --- a/file.txt
# +++ b/file.txt
# @@ -1 +1 @@
# -1
# +2

4.  What does git diff --staged tell you? why is this blank?
# Não aparece nada, pois ainda não adicionamos as alterações do file.txt ao diretório.
5.  Run git add file.txt to stage your changes from the working directory.
6.  What does git diff tell you?
# Não apareceu nada, pois não houve alteração no repositório.
7.  What does git diff --staged tell you?
#diff --git a/file.txt b/file.txt
#index d00491f..0cfbf08 100644
#--- a/file.txt
#+++ b/file.txt
#@@ -1 +1 @@
#-1
#+2

8.  Overwrite the content in file.txt: echo 3 > file.txt to change the state of your file in the working directory (or sc file.txt '3' in PowerShell).
9.  What does git diff tell you?
#diff --git a/file.txt b/file.txt
#index 0cfbf08..00750ed 100644
#--- a/file.txt
#+++ b/file.txt
#@@ -1 +1 @@
#-2
#+3

10. What does git diff --staged tell you?
#diff --git a/file.txt b/file.txt
#index d00491f..0cfbf08 100644
#--- a/file.txt
#+++ b/file.txt
#@@ -1 +1 @@
#-1
#+2

11. Explain what is happening
# Temos no git diff as alterações realizadas no reposítório (alteramos de 2 
# para 3 em file.txt), já com o git diff --staged temos as alterações
#adicionadas ao diretório (alteramos de 1 para 2 no file.txt). 
12. Run git status and observe that file.txt are present twice in the output.
#No ramo master
#Mudanças a serem submetidas:
#  (use "git restore --staged <file>..." to unstage)
#	modified:   file.txt

#Changes not staged for commit:
#  (utilize "git add <arquivo>..." para atualizar o que será submetido)
#  (use "git restore <file>..." to discard changes in working directory)
#	modified:   file.txt

13. Run git reset HEAD file.txt to unstage the change
#t
#Unstaged changes after reset:
#M	file.txt
 
14. What does git status tell you now?
#No ramo master
#Changes not staged for commit:
#  (utilize "git add <arquivo>..." para atualizar o que será submetido)
#  (use "git restore <file>..." to discard changes in working directory)
#	modified:   file.txt

nenhuma modificação adicionada à submissão (utilize "git add" e/ou "git commit -a")

15. Stage the change and make a commit
# [master 72be56c] basic-staging
#  1 file changed, 1 insertion(+), 1 deletion(-)
 
16. What does the log look like?
#commit 72be56cca66903bbda1ea6b3884c165d38f7eee0 (HEAD -> master)
#Author: DayanaCris <dayanacristinesantos89@gmail.com>
#Date:   Wed Oct 26 10:27:21 2022 -0300

#    basic-staging

17. Overwrite the content in file.txt: echo 4 > file.txt (or sc file.txt '4' in PowerShell)
18. What is the content of file.txt?
# 4
19. What does git status tell us?
#No ramo master
#Changes not staged for commit:
#  (utilize "git add <arquivo>..." para atualizar o que será submetido)
#  (use "git restore <file>..." to discard changes in working directory)
#	modified:   file.txt

#nenhuma modificação adicionada à submissão (utilize "git add" e/ou "git commit -a")

20. Run git checkout file.txt
#Updated 1 path from the index

21. What is the content of file.txt?
#3
22. What does git status tell us?
#No ramo master
#nothing to commit, working tree clean
